# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: user.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='user.proto',
  package='user',
  syntax='proto3',
  serialized_pb=_b('\n\nuser.proto\x12\x04user\"\x0b\n\tUser_list\"&\n\x05Users\x12\x1d\n\tUser_list\x18\x01 \x03(\x0b\x32\n.user.User\"9\n\x04User\x12\x0c\n\x04Name\x18\x01 \x01(\t\x12\x12\n\nOccupation\x18\x02 \x01(\t\x12\x0f\n\x07Hobbies\x18\x03 \x03(\t\"\x19\n\tUser_Name\x12\x0c\n\x04Name\x18\x01 \x01(\t\"m\n\x06Status\x12\'\n\x05State\x18\x01 \x01(\x0e\x32\x18.user.Status.state_field\x12\x0f\n\x07Message\x18\x02 \x01(\t\")\n\x0bstate_field\x12\x0e\n\nSUCCESSFUL\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\x32\xde\x01\n\x06Userdb\x12%\n\x07\x41\x64\x64User\x12\n.user.User\x1a\x0c.user.Status\"\x00\x12-\n\nDeleteUser\x12\x0f.user.User_Name\x1a\x0c.user.Status\"\x00\x12*\n\x08GetUsers\x12\x0f.user.User_list\x1a\x0b.user.Users\"\x00\x12(\n\x07GetUser\x12\x0f.user.User_Name\x1a\n.user.User\"\x00\x12(\n\nUpdateUser\x12\n.user.User\x1a\x0c.user.Status\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_STATUS_STATE_FIELD = _descriptor.EnumDescriptor(
  name='state_field',
  full_name='user.Status.state_field',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESSFUL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=227,
  serialized_end=268,
)
_sym_db.RegisterEnumDescriptor(_STATUS_STATE_FIELD)


_USER_LIST = _descriptor.Descriptor(
  name='User_list',
  full_name='user.User_list',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=31,
)


_USERS = _descriptor.Descriptor(
  name='Users',
  full_name='user.Users',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='User_list', full_name='user.Users.User_list', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=71,
)


_USER = _descriptor.Descriptor(
  name='User',
  full_name='user.User',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='user.User.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Occupation', full_name='user.User.Occupation', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Hobbies', full_name='user.User.Hobbies', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=130,
)


_USER_NAME = _descriptor.Descriptor(
  name='User_Name',
  full_name='user.User_Name',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='user.User_Name.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=157,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='user.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='State', full_name='user.Status.State', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Message', full_name='user.Status.Message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STATUS_STATE_FIELD,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=159,
  serialized_end=268,
)

_USERS.fields_by_name['User_list'].message_type = _USER
_STATUS.fields_by_name['State'].enum_type = _STATUS_STATE_FIELD
_STATUS_STATE_FIELD.containing_type = _STATUS
DESCRIPTOR.message_types_by_name['User_list'] = _USER_LIST
DESCRIPTOR.message_types_by_name['Users'] = _USERS
DESCRIPTOR.message_types_by_name['User'] = _USER
DESCRIPTOR.message_types_by_name['User_Name'] = _USER_NAME
DESCRIPTOR.message_types_by_name['Status'] = _STATUS

User_list = _reflection.GeneratedProtocolMessageType('User_list', (_message.Message,), dict(
  DESCRIPTOR = _USER_LIST,
  __module__ = 'user_pb2'
  # @@protoc_insertion_point(class_scope:user.User_list)
  ))
_sym_db.RegisterMessage(User_list)

Users = _reflection.GeneratedProtocolMessageType('Users', (_message.Message,), dict(
  DESCRIPTOR = _USERS,
  __module__ = 'user_pb2'
  # @@protoc_insertion_point(class_scope:user.Users)
  ))
_sym_db.RegisterMessage(Users)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), dict(
  DESCRIPTOR = _USER,
  __module__ = 'user_pb2'
  # @@protoc_insertion_point(class_scope:user.User)
  ))
_sym_db.RegisterMessage(User)

User_Name = _reflection.GeneratedProtocolMessageType('User_Name', (_message.Message,), dict(
  DESCRIPTOR = _USER_NAME,
  __module__ = 'user_pb2'
  # @@protoc_insertion_point(class_scope:user.User_Name)
  ))
_sym_db.RegisterMessage(User_Name)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'user_pb2'
  # @@protoc_insertion_point(class_scope:user.Status)
  ))
_sym_db.RegisterMessage(Status)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class UserdbStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.AddUser = channel.unary_unary(
          '/user.Userdb/AddUser',
          request_serializer=User.SerializeToString,
          response_deserializer=Status.FromString,
          )
      self.DeleteUser = channel.unary_unary(
          '/user.Userdb/DeleteUser',
          request_serializer=User_Name.SerializeToString,
          response_deserializer=Status.FromString,
          )
      self.GetUsers = channel.unary_unary(
          '/user.Userdb/GetUsers',
          request_serializer=User_list.SerializeToString,
          response_deserializer=Users.FromString,
          )
      self.GetUser = channel.unary_unary(
          '/user.Userdb/GetUser',
          request_serializer=User_Name.SerializeToString,
          response_deserializer=User.FromString,
          )
      self.UpdateUser = channel.unary_unary(
          '/user.Userdb/UpdateUser',
          request_serializer=User.SerializeToString,
          response_deserializer=Status.FromString,
          )


  class UserdbServicer(object):

    def AddUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_UserdbServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'AddUser': grpc.unary_unary_rpc_method_handler(
            servicer.AddUser,
            request_deserializer=User.FromString,
            response_serializer=Status.SerializeToString,
        ),
        'DeleteUser': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUser,
            request_deserializer=User_Name.FromString,
            response_serializer=Status.SerializeToString,
        ),
        'GetUsers': grpc.unary_unary_rpc_method_handler(
            servicer.GetUsers,
            request_deserializer=User_list.FromString,
            response_serializer=Users.SerializeToString,
        ),
        'GetUser': grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=User_Name.FromString,
            response_serializer=User.SerializeToString,
        ),
        'UpdateUser': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUser,
            request_deserializer=User.FromString,
            response_serializer=Status.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'user.Userdb', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaUserdbServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def AddUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetUsers(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaUserdbStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def AddUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    AddUser.future = None
    def DeleteUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DeleteUser.future = None
    def GetUsers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetUsers.future = None
    def GetUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetUser.future = None
    def UpdateUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    UpdateUser.future = None


  def beta_create_Userdb_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('user.Userdb', 'AddUser'): User.FromString,
      ('user.Userdb', 'DeleteUser'): User_Name.FromString,
      ('user.Userdb', 'GetUser'): User_Name.FromString,
      ('user.Userdb', 'GetUsers'): User_list.FromString,
      ('user.Userdb', 'UpdateUser'): User.FromString,
    }
    response_serializers = {
      ('user.Userdb', 'AddUser'): Status.SerializeToString,
      ('user.Userdb', 'DeleteUser'): Status.SerializeToString,
      ('user.Userdb', 'GetUser'): User.SerializeToString,
      ('user.Userdb', 'GetUsers'): Users.SerializeToString,
      ('user.Userdb', 'UpdateUser'): Status.SerializeToString,
    }
    method_implementations = {
      ('user.Userdb', 'AddUser'): face_utilities.unary_unary_inline(servicer.AddUser),
      ('user.Userdb', 'DeleteUser'): face_utilities.unary_unary_inline(servicer.DeleteUser),
      ('user.Userdb', 'GetUser'): face_utilities.unary_unary_inline(servicer.GetUser),
      ('user.Userdb', 'GetUsers'): face_utilities.unary_unary_inline(servicer.GetUsers),
      ('user.Userdb', 'UpdateUser'): face_utilities.unary_unary_inline(servicer.UpdateUser),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Userdb_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('user.Userdb', 'AddUser'): User.SerializeToString,
      ('user.Userdb', 'DeleteUser'): User_Name.SerializeToString,
      ('user.Userdb', 'GetUser'): User_Name.SerializeToString,
      ('user.Userdb', 'GetUsers'): User_list.SerializeToString,
      ('user.Userdb', 'UpdateUser'): User.SerializeToString,
    }
    response_deserializers = {
      ('user.Userdb', 'AddUser'): Status.FromString,
      ('user.Userdb', 'DeleteUser'): Status.FromString,
      ('user.Userdb', 'GetUser'): User.FromString,
      ('user.Userdb', 'GetUsers'): Users.FromString,
      ('user.Userdb', 'UpdateUser'): Status.FromString,
    }
    cardinalities = {
      'AddUser': cardinality.Cardinality.UNARY_UNARY,
      'DeleteUser': cardinality.Cardinality.UNARY_UNARY,
      'GetUser': cardinality.Cardinality.UNARY_UNARY,
      'GetUsers': cardinality.Cardinality.UNARY_UNARY,
      'UpdateUser': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'user.Userdb', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
