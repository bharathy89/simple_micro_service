// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	UserList
	Users
	User
	User_Name
	Status
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusStateField int32

const (
	Status_SUCCESSFUL StatusStateField = 0
	Status_FAILED     StatusStateField = 1
)

var StatusStateField_name = map[int32]string{
	0: "SUCCESSFUL",
	1: "FAILED",
}
var StatusStateField_value = map[string]int32{
	"SUCCESSFUL": 0,
	"FAILED":     1,
}

func (x StatusStateField) String() string {
	return proto.EnumName(StatusStateField_name, int32(x))
}
func (StatusStateField) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type UserList struct {
}

func (m *UserList) Reset()                    { *m = UserList{} }
func (m *UserList) String() string            { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()               {}
func (*UserList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Users struct {
	UserList []*User `protobuf:"bytes,1,rep,name=User_list,json=userList" json:"User_list,omitempty"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Users) GetUserList() []*User {
	if m != nil {
		return m.UserList
	}
	return nil
}

type User struct {
	Name       string   `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Occupation string   `protobuf:"bytes,2,opt,name=Occupation,json=occupation" json:"Occupation,omitempty"`
	Hobbies    []string `protobuf:"bytes,3,rep,name=Hobbies,json=hobbies" json:"Hobbies,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetOccupation() string {
	if m != nil {
		return m.Occupation
	}
	return ""
}

func (m *User) GetHobbies() []string {
	if m != nil {
		return m.Hobbies
	}
	return nil
}

type User_Name struct {
	Name string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
}

func (m *User_Name) Reset()                    { *m = User_Name{} }
func (m *User_Name) String() string            { return proto.CompactTextString(m) }
func (*User_Name) ProtoMessage()               {}
func (*User_Name) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User_Name) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Status struct {
	State   StatusStateField `protobuf:"varint,1,opt,name=State,json=state,enum=user.StatusStateField" json:"State,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=Message,json=message" json:"Message,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Status) GetState() StatusStateField {
	if m != nil {
		return m.State
	}
	return Status_SUCCESSFUL
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*UserList)(nil), "user.User_list")
	proto.RegisterType((*Users)(nil), "user.Users")
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*User_Name)(nil), "user.User_Name")
	proto.RegisterType((*Status)(nil), "user.Status")
	proto.RegisterEnum("user.StatusStateField", StatusStateField_name, StatusStateField_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Userdb service

type UserdbClient interface {
	AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Status, error)
	DeleteUser(ctx context.Context, in *User_Name, opts ...grpc.CallOption) (*Status, error)
	GetUsers(ctx context.Context, in *UserList, opts ...grpc.CallOption) (*Users, error)
	GetUser(ctx context.Context, in *User_Name, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Status, error)
}

type userdbClient struct {
	cc *grpc.ClientConn
}

func NewUserdbClient(cc *grpc.ClientConn) UserdbClient {
	return &userdbClient{cc}
}

func (c *userdbClient) AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := grpc.Invoke(ctx, "/user.Userdb/AddUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userdbClient) DeleteUser(ctx context.Context, in *User_Name, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := grpc.Invoke(ctx, "/user.Userdb/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userdbClient) GetUsers(ctx context.Context, in *UserList, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := grpc.Invoke(ctx, "/user.Userdb/GetUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userdbClient) GetUser(ctx context.Context, in *User_Name, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/user.Userdb/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userdbClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := grpc.Invoke(ctx, "/user.Userdb/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Userdb service

type UserdbServer interface {
	AddUser(context.Context, *User) (*Status, error)
	DeleteUser(context.Context, *User_Name) (*Status, error)
	GetUsers(context.Context, *UserList) (*Users, error)
	GetUser(context.Context, *User_Name) (*User, error)
	UpdateUser(context.Context, *User) (*Status, error)
}

func RegisterUserdbServer(s *grpc.Server, srv UserdbServer) {
	s.RegisterService(&_Userdb_serviceDesc, srv)
}

func _Userdb_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserdbServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Userdb/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserdbServer).AddUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Userdb_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_Name)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserdbServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Userdb/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserdbServer).DeleteUser(ctx, req.(*User_Name))
	}
	return interceptor(ctx, in, info, handler)
}

func _Userdb_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserdbServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Userdb/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserdbServer).GetUsers(ctx, req.(*UserList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Userdb_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_Name)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserdbServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Userdb/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserdbServer).GetUser(ctx, req.(*User_Name))
	}
	return interceptor(ctx, in, info, handler)
}

func _Userdb_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserdbServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Userdb/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserdbServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _Userdb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.Userdb",
	HandlerType: (*UserdbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _Userdb_AddUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Userdb_DeleteUser_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _Userdb_GetUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Userdb_GetUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Userdb_UpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0x4a, 0xf3, 0x40,
	0x10, 0xc5, 0x9b, 0xaf, 0x69, 0xd2, 0x9e, 0x7c, 0xd4, 0xb2, 0x57, 0xa1, 0x17, 0x2a, 0x01, 0xb1,
	0x0a, 0x06, 0xa9, 0x4f, 0x50, 0xfa, 0x47, 0x85, 0xaa, 0x90, 0x98, 0xeb, 0x92, 0x34, 0xab, 0x06,
	0xda, 0xa6, 0x74, 0xb7, 0x97, 0xbe, 0xaa, 0xcf, 0x62, 0x66, 0x37, 0xd8, 0x85, 0x8a, 0x57, 0x99,
	0x39, 0xf3, 0xdb, 0x99, 0x93, 0x9d, 0x05, 0xf6, 0x82, 0xef, 0xc2, 0xed, 0xae, 0x94, 0x25, 0xb3,
	0x29, 0x0e, 0x3c, 0x74, 0x92, 0xea, 0xbb, 0x58, 0x15, 0x42, 0x06, 0xb7, 0x68, 0x51, 0x22, 0xd8,
	0xa5, 0xa1, 0xfa, 0xd6, 0x79, 0x73, 0xe0, 0x0d, 0x11, 0xaa, 0xb3, 0x24, 0x47, 0x6d, 0x0a, 0xe7,
	0x74, 0xe2, 0x15, 0x36, 0x29, 0x8c, 0xc1, 0x7e, 0x4e, 0xd7, 0xbc, 0x62, 0xad, 0x41, 0x27, 0xb2,
	0x37, 0x55, 0xcc, 0x4e, 0x81, 0x97, 0xe5, 0x72, 0xbf, 0x4d, 0x65, 0x51, 0x6e, 0xfc, 0x7f, 0xaa,
	0x82, 0xf2, 0x47, 0x61, 0x3e, 0xdc, 0x87, 0x32, 0xcb, 0x0a, 0x2e, 0xfc, 0x66, 0x35, 0xa2, 0x13,
	0xb9, 0x1f, 0x3a, 0x0d, 0xce, 0xea, 0xf1, 0xd4, 0xf2, 0xb7, 0xd6, 0xc1, 0x27, 0x9c, 0x58, 0xa6,
	0x72, 0x2f, 0x58, 0x88, 0x16, 0x45, 0xba, 0xdc, 0x1d, 0xfa, 0xda, 0xa5, 0x2e, 0x86, 0x82, 0x2a,
	0x8b, 0xb7, 0x82, 0xaf, 0xf2, 0xa8, 0xa5, 0x12, 0x1a, 0xfa, 0xc4, 0x85, 0x48, 0xdf, 0x79, 0xed,
	0xc8, 0x5d, 0xeb, 0x34, 0xb8, 0x82, 0x67, 0xf0, 0xac, 0x0b, 0xc4, 0xc9, 0x78, 0x3c, 0x8d, 0xe3,
	0x59, 0x32, 0xef, 0x35, 0x18, 0xe0, 0xcc, 0x46, 0x8f, 0xf3, 0xe9, 0xa4, 0x67, 0x0d, 0xbf, 0x2c,
	0x38, 0x64, 0x30, 0xcf, 0xd8, 0x05, 0xdc, 0x51, 0x9e, 0xab, 0x3b, 0x30, 0x6e, 0xa8, 0xff, 0xdf,
	0xf4, 0x11, 0x34, 0xd8, 0x0d, 0x30, 0xe1, 0x2b, 0x2e, 0xb9, 0x22, 0x4f, 0x0e, 0xa4, 0xfa, 0xc7,
	0x23, 0xfc, 0x1a, 0xed, 0x7b, 0x2e, 0xf5, 0x2e, 0x4c, 0x98, 0xf6, 0xd1, 0xf7, 0x0e, 0x02, 0xb1,
	0x03, 0xb8, 0x35, 0x7b, 0xdc, 0xd7, 0xb0, 0xa4, 0x48, 0x24, 0xdb, 0x3c, 0xad, 0x4d, 0xfc, 0x61,
	0x37, 0x73, 0xd4, 0x13, 0xb9, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xef, 0xd2, 0x1f, 0x04, 0x30,
	0x02, 0x00, 0x00,
}
